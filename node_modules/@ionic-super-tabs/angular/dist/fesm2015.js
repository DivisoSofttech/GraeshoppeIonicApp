import { Component, ChangeDetectorRef, ElementRef, APP_INITIALIZER, NgModule } from '@angular/core';
import { fromEvent } from 'rxjs';
import { DOCUMENT, CommonModule } from '@angular/common';
import { defineCustomElements } from '@ionic-super-tabs/core/loader';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} Cmp
 * @param {?} inputs
 * @return {?}
 */
function proxyInputs(Cmp, inputs) {
    /** @type {?} */
    const Prototype = Cmp.prototype;
    inputs.forEach((/**
     * @param {?} item
     * @return {?}
     */
    item => {
        Object.defineProperty(Prototype, item, {
            /**
             * @return {?}
             */
            get() { return this.el[item]; },
            /**
             * @param {?} val
             * @return {?}
             */
            set(val) { this.el[item] = val; },
        });
    }));
}
/**
 * @param {?} Cmp
 * @param {?} methods
 * @return {?}
 */
function proxyMethods(Cmp, methods) {
    /** @type {?} */
    const Prototype = Cmp.prototype;
    methods.forEach((/**
     * @param {?} methodName
     * @return {?}
     */
    methodName => {
        Prototype[methodName] = (/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            const args = arguments;
            return this.el.componentOnReady().then((/**
             * @param {?} el
             * @return {?}
             */
            (el) => el[methodName].apply(el, args)));
        });
    }));
}
/**
 * @param {?} instance
 * @param {?} el
 * @param {?} events
 * @return {?}
 */
function proxyOutputs(instance, el, events) {
    events.forEach((/**
     * @param {?} eventName
     * @return {?}
     */
    eventName => instance[eventName] = fromEvent(el, eventName)));
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class SuperTab {
    /**
     * @param {?} c
     * @param {?} r
     */
    constructor(c, r) {
        c.detach();
        this.el = r.nativeElement;
    }
}
SuperTab.decorators = [
    { type: Component, args: [{ selector: 'super-tab', changeDetection: 0, template: '<ng-content></ng-content>' },] },
];
/** @nocollapse */
SuperTab.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
proxyMethods(SuperTab, ['getRootScrollableEl']);
class SuperTabButton {
    /**
     * @param {?} c
     * @param {?} r
     */
    constructor(c, r) {
        c.detach();
        this.el = r.nativeElement;
    }
}
SuperTabButton.decorators = [
    { type: Component, args: [{ selector: 'super-tab-button', changeDetection: 0, template: '<ng-content></ng-content>', inputs: ['disabled'] },] },
];
/** @nocollapse */
SuperTabButton.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
proxyInputs(SuperTabButton, ['disabled']);
class SuperTabs {
    /**
     * @param {?} c
     * @param {?} r
     */
    constructor(c, r) {
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['tabChange']);
    }
}
SuperTabs.decorators = [
    { type: Component, args: [{ selector: 'super-tabs', changeDetection: 0, template: '<ng-content></ng-content>', inputs: ['config', 'activeTabIndex'] },] },
];
/** @nocollapse */
SuperTabs.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
proxyMethods(SuperTabs, ['setConfig', 'selectTab']);
proxyInputs(SuperTabs, ['config', 'activeTabIndex']);
class SuperTabsContainer {
    /**
     * @param {?} c
     * @param {?} r
     */
    constructor(c, r) {
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['activeTabIndexChange', 'selectedTabIndexChange']);
    }
}
SuperTabsContainer.decorators = [
    { type: Component, args: [{ selector: 'super-tabs-container', changeDetection: 0, template: '<ng-content></ng-content>', inputs: ['swipeEnabled', 'autoScrollTop'] },] },
];
/** @nocollapse */
SuperTabsContainer.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
proxyInputs(SuperTabsContainer, ['swipeEnabled', 'autoScrollTop']);
class SuperTabsToolbar {
    /**
     * @param {?} c
     * @param {?} r
     */
    constructor(c, r) {
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['buttonClick']);
    }
}
SuperTabsToolbar.decorators = [
    { type: Component, args: [{ selector: 'super-tabs-toolbar', changeDetection: 0, template: '<ng-content></ng-content>', inputs: ['showIndicator', 'color', 'scrollable', 'scrollablePadding'] },] },
];
/** @nocollapse */
SuperTabsToolbar.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: ElementRef }
];
proxyInputs(SuperTabsToolbar, ['showIndicator', 'color', 'scrollable', 'scrollablePadding']);

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} doc
 * @return {?}
 */
function appInit(doc) {
    return (/**
     * @return {?}
     */
    () => {
        /** @type {?} */
        const win = doc.defaultView;
        if (win) {
            return defineCustomElements(win);
        }
    });
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const DECLARATIONS = [
    SuperTab,
    SuperTabButton,
    SuperTabs,
    SuperTabsContainer,
    SuperTabsToolbar,
];
class SuperTabsModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: SuperTabsModule,
            providers: [
                {
                    provide: APP_INITIALIZER,
                    useFactory: appInit,
                    multi: true,
                    deps: [DOCUMENT],
                },
            ],
        };
    }
}
SuperTabsModule.decorators = [
    { type: NgModule, args: [{
                declarations: DECLARATIONS,
                exports: DECLARATIONS,
                imports: [CommonModule],
            },] },
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { SuperTab, SuperTabButton, SuperTabs, SuperTabsContainer, SuperTabsModule, SuperTabsToolbar, DECLARATIONS as ɵa, appInit as ɵb };
